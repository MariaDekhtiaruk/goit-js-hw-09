{"mappings":"gfAAAA,EAAA,S,iBAGA,SAASC,EAAcC,EAAUC,GAa/B,OAZgB,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAgB,CAAER,WAAUC,SAClCQ,YAAW,WACLJ,EACFF,EAAQK,GAERJ,EAAOI,E,GAERP,E,IAMMS,SAASC,cAAe,SAEhCC,iBAAkB,UAEvB,SAAsBC,GACpBA,EAAIC,iBAEJ,IAAMC,EAAeF,EAAIG,cAAcC,SACjCC,EAAQC,SAASJ,EAAad,MAAMmB,OACpCC,EAAOF,SAASJ,EAAaM,KAAKD,OAClCE,EAASH,SAASJ,EAAaO,OAAOF,OACtCG,EAAW,CACftB,MAAAiB,EACAG,OACAC,UAEFE,QAAQC,IAAIF,GAEZ,IAAK,IAAIG,EAAI,EAAGA,GAAKJ,EAAS,EAAGI,IAAK,CACpCF,QAAQC,IAAIC,GAGO3B,EAAc2B,EAFfR,EAAQG,EAAOK,GAK9BC,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACjB4B,EAAAC,OAAOC,QACL,uBAAwCC,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAGjDgC,OAAM,SAAAL,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAClB4B,EAAAC,OAAOI,QACL,sBAAqCF,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    const promiseResult = { position, delay };\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(promiseResult);\n      } else {\n        reject(promiseResult);\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\nconst form = document.querySelector(`.form`);\n\nform.addEventListener(`submit`, onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const formElements = evt.currentTarget.elements;\n  const delay = parseInt(formElements.delay.value);\n  const step = parseInt(formElements.step.value);\n  const amount = parseInt(formElements.amount.value);\n  const formData = {\n    delay,\n    step,\n    amount,\n  };\n  console.log(formData);\n\n  for (let i = 0; i <= amount - 1; i++) {\n    console.log(i);\n    const realDelay = delay + step * i;\n\n    const newPromise = createPromise(i, realDelay);\n\n    newPromise\n      .then(({ position, delay }) => {\n        Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n"],"names":["parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","promiseResult","setTimeout","document","querySelector","addEventListener","evt","preventDefault","formElements","currentTarget","elements","delay1","parseInt","value","step","amount","formData","console","log","i","then","param","$h6c0i","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.e069c336.js.map"}